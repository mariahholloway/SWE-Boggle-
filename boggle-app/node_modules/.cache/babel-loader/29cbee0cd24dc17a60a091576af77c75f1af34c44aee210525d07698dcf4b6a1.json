{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\myahh\\\\OneDrive\\\\Documents\\\\boggle\\\\boggle-app\\\\src\\\\ToggleGameState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from \"@material-ui/core/Button\";\n//import {GAME_STATE} from './game_state_enum.js';\nimport { GAME_STATE } from './GameState.js';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport './ToggleGameState.css';\nimport { collection, addDoc, query, getDocs, orderBy, limit } from \"firebase/firestore\";\nimport { firestore } from './firebase.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToggleGameState(_ref) {\n  _s();\n  let {\n    gameState,\n    setGameState,\n    setSize,\n    setTotalTime,\n    numFound,\n    theGrid,\n    setGrid\n  } = _ref;\n  const [buttonText, setButtonText] = useState(\"Start a new game!\");\n  const [startTime, setStartTime] = useState(0);\n  const [boardSize, setBoardSize] = useState(3);\n  const [leaderBoard, setLeaderBoard] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [deltaTime, setDeltaTime] = useState(0);\n  let d = 0;\n  function updateGameState(endTime) {\n    if (gameState === GAME_STATE.SHOW_LEADERBOARD || gameState === GAME_STATE.BEFORE || gameState === GAME_STATE.ENDED) {\n      setStartTime(Date.now());\n      setGameState(GAME_STATE.IN_PROGRESS);\n      setButtonText(\"End game\");\n    } else if (gameState === GAME_STATE.IN_PROGRESS) {\n      d = (endTime - startTime) / 1000.0;\n      setDeltaTime(d);\n      setTotalTime(d);\n      setGameState(GAME_STATE.ADD_LEADERBOARD);\n      /*    \n          setGameState(GAME_STATE.ENDED);\n          setButtonText(\"Start a new game!\");\n          StoreGameResults();\n      */\n    }\n  }\n\n  /*Query Firestore to get all games ordered by boardSize, Time Solved */\n  async function showLeaderBoard() {\n    setGameState(GAME_STATE.SHOW_LEADERBOARD);\n    setButtonText(\"Play Existing Game!\");\n    console.log(\"testing the leaderboard!!!!\");\n    // build query and bind results to menu list\n\n    try {\n      const q = query(collection(firestore, \"LeaderBoard\"), orderBy(\"boardSize\"), orderBy(\"solveTime\", \"asc\"), limit(10));\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach(doc => {\n        console.log(doc.id, \" => \", doc.data());\n        leaderBoard.push(doc.data());\n        setLeaderBoard([...leaderBoard, leaderBoard]); //doc.boardSize, doc.solveTime, doc.playerName\n        console.log(\"Entry = \", leaderBoard);\n      });\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n  }\n\n  /* Store the Game in Firestore */\n  async function StoreGameResults() {\n    try {\n      /*const docRef =*/await addDoc(collection(firestore, \"LeaderBoard\"), {\n        boardSize: boardSize,\n        solveTime: deltaTime,\n        numFound: numFound,\n        playerName: input,\n        theBoard: theGrid\n      });\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n  }\n  function evaluateInput() {\n    setGameState(GAME_STATE.ENDED);\n    setButtonText(\"Start a new game!\");\n    StoreGameResults();\n  }\n  function keyPress(e) {\n    if (e.key === 'Enter') {\n      e.target.value = \"\";\n      evaluateInput();\n    }\n  }\n  const handleGridChange = event => {\n    setSize(-11111);\n    setGrid(JSON.parse(event.target.value));\n    console.log(\"theGrid = \", event.target.value);\n  };\n  const handleSizeMenuChange = event => {\n    setBoardSize(event.target.value);\n    setSize(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [(gameState === GAME_STATE.BEFORE || gameState === GAME_STATE.ENDED) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Toggle-game-state2\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => showLeaderBoard(),\n        children: \"Play Existing Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Toggle-game-state\",\n      children: [gameState === GAME_STATE.ADD_LEADERBOARD && /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Enter Your Name\",\n        variant: \"outlined\",\n        onKeyPress: e => keyPress(e),\n        onChange: event => setInput(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), gameState !== GAME_STATE.ADD_LEADERBOARD && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => updateGameState(Date.now()),\n        children: buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 10\n      }, this), (gameState === GAME_STATE.BEFORE || gameState === GAME_STATE.ENDED) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Input-select-size\",\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"sizelabel\",\n            id: \"sizemenu\",\n            onChange: handleSizeMenuChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 3,\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 4,\n              children: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 5,\n              children: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 6,\n              children: \"6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 7,\n              children: \"7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 8,\n              children: \"8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 9,\n              children: \"9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 10,\n              children: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: \"Set Grid Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), gameState === GAME_STATE.SHOW_LEADERBOARD && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Input-select-size\",\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"leaderboardlabel\",\n            id: \"leaderboardmenu\",\n            onChange: handleGridChange,\n            children: leaderBoard.map((item, idx) => {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item.theBoard,\n                children: [\"Size: \", item.boardSize, \" Words Found: \", item.numFound, \" Name: \", item.playerName]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 13\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: \"Select Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(ToggleGameState, \"wCga/0C7wTPlpFUF8/w2IXiZM0A=\");\n_c = ToggleGameState;\nexport default ToggleGameState;\nvar _c;\n$RefreshReg$(_c, \"ToggleGameState\");","map":{"version":3,"names":["React","useState","Button","GAME_STATE","MenuItem","FormHelperText","TextField","Select","FormControl","collection","addDoc","query","getDocs","orderBy","limit","firestore","ToggleGameState","gameState","setGameState","setSize","setTotalTime","numFound","theGrid","setGrid","buttonText","setButtonText","startTime","setStartTime","boardSize","setBoardSize","leaderBoard","setLeaderBoard","input","setInput","deltaTime","setDeltaTime","d","updateGameState","endTime","SHOW_LEADERBOARD","BEFORE","ENDED","Date","now","IN_PROGRESS","ADD_LEADERBOARD","showLeaderBoard","console","log","q","querySnapshot","forEach","doc","id","data","push","e","error","StoreGameResults","solveTime","playerName","theBoard","evaluateInput","keyPress","key","target","value","handleGridChange","event","JSON","parse","handleSizeMenuChange","map","item","idx"],"sources":["C:/Users/myahh/OneDrive/Documents/boggle/boggle-app/src/ToggleGameState.js"],"sourcesContent":["import React, {useState} from 'react';\nimport Button from \"@material-ui/core/Button\";\n//import {GAME_STATE} from './game_state_enum.js';\nimport {GAME_STATE} from './GameState.js';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport './ToggleGameState.css';\nimport { collection, addDoc, query, getDocs, orderBy, limit } from \"firebase/firestore\";\nimport {firestore} from './firebase.js';\n\nfunction ToggleGameState({gameState, setGameState, setSize, setTotalTime, numFound, theGrid, setGrid}) {\n\n  const [buttonText, setButtonText] = useState(\"Start a new game!\");\n  const [startTime, setStartTime] = useState(0);\n  const [boardSize, setBoardSize] = useState(3);\n  const [leaderBoard, setLeaderBoard] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [deltaTime, setDeltaTime] = useState(0);\n  \n  let d = 0;\n  \n  function updateGameState(endTime) {\n    \n    if (gameState === GAME_STATE.SHOW_LEADERBOARD || gameState === GAME_STATE.BEFORE || gameState === GAME_STATE.ENDED) {\n      setStartTime(Date.now());\n      setGameState(GAME_STATE.IN_PROGRESS);\n      setButtonText(\"End game\");\n    } else if (gameState === GAME_STATE.IN_PROGRESS) {\n      d = (endTime - startTime)/ 1000.0;\n      setDeltaTime(d);\n      setTotalTime(d); \n      \n      setGameState(GAME_STATE.ADD_LEADERBOARD);\n  /*    \n      setGameState(GAME_STATE.ENDED);\n      setButtonText(\"Start a new game!\");\n      StoreGameResults();\n  */\n    }\n  }\n  \n  /*Query Firestore to get all games ordered by boardSize, Time Solved */\n  async function showLeaderBoard(){\n   \n      setGameState(GAME_STATE.SHOW_LEADERBOARD);\n      setButtonText(\"Play Existing Game!\");\n      console.log(\"testing the leaderboard!!!!\");\n      // build query and bind results to menu list\n \n    try {\n       const q = query(collection(firestore, \"LeaderBoard\"), orderBy(\"boardSize\"), orderBy(\"solveTime\", \"asc\"), limit(10));\n\n       const querySnapshot = await getDocs(q);\n       querySnapshot.forEach((doc) => {\n              \n       console.log(doc.id, \" => \", doc.data());\n        \n       leaderBoard.push(doc.data());                \n       setLeaderBoard([...leaderBoard, leaderBoard]);  //doc.boardSize, doc.solveTime, doc.playerName\n       console.log(\"Entry = \", leaderBoard);\n      });\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n    \n  }\n\n  /* Store the Game in Firestore */\n  async function StoreGameResults() {\n\n    try {\n      /*const docRef =*/ await addDoc(collection(firestore, \"LeaderBoard\"), {\n      boardSize: boardSize,\n      solveTime: deltaTime,\n      numFound: numFound,    \n      playerName: input,\n      theBoard: theGrid\n      });  \n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n  }\n  \n  function evaluateInput() {\n    setGameState(GAME_STATE.ENDED);\n    setButtonText(\"Start a new game!\");\n    StoreGameResults();\n  }\n\n  function keyPress(e) {\n    if (e.key === 'Enter') {\n      e.target.value = \"\";\n      evaluateInput();\n    }\n  }\n  \n  const handleGridChange = (event) => {\n  \n    setSize(-11111);\n    setGrid(JSON.parse(event.target.value));\n    console.log(\"theGrid = \", event.target.value); \n  };\n\n  const handleSizeMenuChange = (event) => {\n    setBoardSize(event.target.value);\n    setSize(event.target.value);\n  };\n  \n  return (\n    <div>\n    { (gameState === GAME_STATE.BEFORE || gameState === GAME_STATE.ENDED) &&\n    <div className=\"Toggle-game-state2\">\n          <Button variant=\"outlined\" onClick={() => showLeaderBoard()} >\n          Play Existing Game\n          </Button>\n    </div>\n    }\n    <div className=\"Toggle-game-state\">\n      \n      { gameState === GAME_STATE.ADD_LEADERBOARD &&\n        \n        <TextField id=\"outlined-basic\" label=\"Enter Your Name\" variant=\"outlined\" onKeyPress={(e) => keyPress(e)} onChange={(event) => setInput(event.target.value)} />\n      }\n      \n      { gameState !== GAME_STATE.ADD_LEADERBOARD &&\n         <Button variant=\"outlined\" onClick={() => updateGameState(Date.now())} >\n        {buttonText}\n        </Button>\n      }\n\n      { (gameState === GAME_STATE.BEFORE || gameState === GAME_STATE.ENDED)  &&\n        <div className=\"Input-select-size\">\n        <FormControl>\n       \n        <Select\n          labelId=\"sizelabel\"\n          id=\"sizemenu\"\n          onChange={handleSizeMenuChange}\n        >\n          <MenuItem value={3}>3</MenuItem>\n          <MenuItem value={4}>4</MenuItem>\n          <MenuItem value={5}>5</MenuItem>\n          <MenuItem value={6}>6</MenuItem>\n          <MenuItem value={7}>7</MenuItem>\n          <MenuItem value={8}>8</MenuItem>\n          <MenuItem value={9}>9</MenuItem>\n          <MenuItem value={10}>10</MenuItem>\n        </Select>\n         <FormHelperText>Set Grid Size</FormHelperText>\n        </FormControl>\n       </div>\n      }\n\n      {(gameState === GAME_STATE.SHOW_LEADERBOARD) &&\n        <div className=\"Input-select-size\">\n        <FormControl>\n          \n       <Select\n         labelId=\"leaderboardlabel\"\n         id=\"leaderboardmenu\"\n         onChange={handleGridChange}\n       >\n       {leaderBoard.map((item, idx) => {\n        return (\n            <MenuItem key={idx} value={item.theBoard}>\n              Size: {item.boardSize} Words Found: {item.numFound} Name: {item.playerName}\n            </MenuItem>\n        );\n       })}\n       </Select>\n       <FormHelperText>Select Game</FormHelperText>\n        </FormControl>\n        </div>\n      }\n      \n    </div>\n</div>\n  );\n}\n\nexport default ToggleGameState;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}